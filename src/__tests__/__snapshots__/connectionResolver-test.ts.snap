// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`connectionResolver "Relay Cursor Connections Specification (Pagination algorithm)": ApplyCursorsToEdges(allEdges, before, after): should throw error if \`first\` is less than 0 1`] = `[Error: Argument \`first\` should be non-negative number.]`;

exports[`connectionResolver "Relay Cursor Connections Specification (Pagination algorithm)": ApplyCursorsToEdges(allEdges, before, after): should throw error if \`last\` is less than 0 1`] = `[Error: Argument \`last\` should be non-negative number.]`;

exports[`connectionResolver edges with data correctly handles filtering 1`] = `
Object {
  "count": 1,
  "edges": Array [
    Object {
      "cursor": "MA==",
      "id": 1,
      "node": Object {
        "age": 12,
        "gender": "m",
        "id": 2,
        "name": "user02",
      },
      "otherUserId": 2,
      "type": "likes",
      "userId": 1,
    },
  ],
  "pageInfo": Object {
    "endCursor": "MA==",
    "hasNextPage": false,
    "hasPreviousPage": false,
    "startCursor": "MA==",
  },
}
`;

exports[`connectionResolver edges with data correctly resolves with edges 1`] = `
Object {
  "count": 2,
  "edges": Array [
    Object {
      "cursor": "MA==",
      "id": 1,
      "node": Object {
        "age": 12,
        "gender": "m",
        "id": 2,
        "name": "user02",
      },
      "otherUserId": 2,
      "type": "likes",
      "userId": 1,
    },
    Object {
      "cursor": "MQ==",
      "id": 2,
      "node": Object {
        "age": 11,
        "gender": "m",
        "id": 1,
        "name": "user01",
      },
      "otherUserId": 1,
      "type": "dislikes",
      "userId": 2,
    },
  ],
  "pageInfo": Object {
    "endCursor": "MQ==",
    "hasNextPage": false,
    "hasPreviousPage": false,
    "startCursor": "MA==",
  },
}
`;

exports[`connectionResolver fallback logic (offset in cursor) should throw error if \`first\` is less than 0 1`] = `[Error: Argument \`first\` should be non-negative number.]`;

exports[`connectionResolver fallback logic (offset in cursor) should throw error if \`last\` is less than 0 1`] = `[Error: Argument \`last\` should be non-negative number.]`;
